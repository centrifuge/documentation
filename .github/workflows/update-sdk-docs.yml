# This workflow will update the docs in the sdk-docs repo

name: Update Docs

on:
  # Anyone can trigger this workflow as the repository is public.
  repository_dispatch:
    types: [trigger-docs-update]
  # uncomment this to test outside of main branch:
  pull_request:
    paths:
      - ".github/workflows/update-sdk-docs.yml"

jobs:
  # This is a sanity check to make sure the trigger is coming from the sdk repo
  # if not, we will fail the workflow and it will not run the rest of the jobs
  validate-trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Validate webhook secret
        env:
          EXPECTED_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          RECEIVED_SECRET: ${{ github.event.client_payload.secret }}
        shell: bash
        run: |
          if [[ "${EXPECTED_SECRET}" != "${RECEIVED_SECRET}" ]]; then
            echo "Invalid webhook secret"
            exit 1
          fi
          echo "Webhook validation successful"
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout centrifuge/sdk repository
        uses: actions/checkout@v4
        with:
          repository: centrifuge/sdk
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Yarn
        shell: bash
        run: |
          corepack enable
          corepack prepare yarn@4.5.0 --activate
      - name: Install dependencies
        run: yarn install

      - name: Run gen:docs command
        run: yarn gen:docs --out sdk-docs

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-docs
          path: sdk-docs/
          retention-days: 1

  update-sdk-docs:
    needs: update-docs
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout sdk-docs repository
        uses: actions/checkout@v4

      - name: Download docs artifact
        uses: actions/download-artifact@v4
        with:
          name: generated-docs
          path: sdk-docs/

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install fs-extra

      - name: Update docs
        id: update_docs
        shell: bash
        run: |
          # Update the docs using a fixed path
          node "${GITHUB_WORKSPACE}/.github/ci-scripts/update-sdk-docs.cjs"

          # Use safe command substitution for git status
          changes="$(git status --porcelain || true)"
          if [[ -n "${changes}" ]]; then
            echo "Changes detected"
            echo "has_changes=true" >> "${GITHUB_OUTPUT}"
          else
            echo "No changes detected"
            echo "has_changes=false" >> "${GITHUB_OUTPUT}"
          fi
      - name: Push changes to branch
        if: steps.update_docs.outputs.has_changes == 'true'
        run: |
          branch_name="docs-update-${{ github.run_id }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b $branch_name
          git add -A
          git commit -m "Update SDK documentation"
          git push origin $branch_name
      - name: Create Issue
        if: steps.update_docs.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const branch = `docs-update-${context.runId}`;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸ“š New SDK Documentation Update Available',
              body: `A new documentation update is ready for review in branch \`${branch}\`.\n\nTo review and merge:\n1. Check out branch: \`git checkout ${branch}\`\n2. Review changes\n3. If everything looks good, merge to main\n\nTriggered by: ${context.eventName}`
            });
